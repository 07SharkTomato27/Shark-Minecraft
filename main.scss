@use "sass:list";

/*
sass main.scss:main.css -w
*/

$blocks: (
	"air",
	"stone",
	"grass",
	"dirt",
	"log",
	"leaves",
);

:root {
	color-scheme: dark;
	--cube-size: 10rem;

	--air-image: none;
	--stone-image: url("./assets/stone.png");
	--grass-image: url("./assets/grass_side_carried.png");
	--grass-top-image: url("./assets/grass_carried.png");
	--dirt-image: url("./assets/dirt.png");
	--log-image: url("./assets/log_oak.png");
	--leaves-image: url("./assets/azalea_leaves.png");
}

body {
	color: white;
	background-color: lightSkyBlue;
	block-size: 100vh;
	block-size: 100dvb;
	margin: 0;
	box-sizing: border-box;
	font-family: system-ui, sans-serif;
	overflow: hidden;

	perspective: 50rem;
	perspective-origin: center center;

	display: grid;
	place-content: center center;
}

body, body * {
	transform-style: preserve-3d;
}

label, button {
	cursor: pointer;
}

h1, p {
	margin: 0;
}

h1, strong {
	font-weight: 600;
}

a {
	color: inherit;
}

// .content {
// 	background-color: #0ff6;

// 	.blocks {
// 		display: flex;
// 		flex-direction: column;

// 		animation: 20s linear infinite rotate;
// 		background-color: #f006;

// 		& > .layer-container {
// 			block-size: var(--cube-size);
// 			// inline-size: 40rem;
// 			// outline: 1px solid red;
// 			// outline-offset: -2px;
// 			background-color: #0f06;
// 			display: grid;
// 			place-content: center;

// 			& > .layer {
// 				rotate: x -100grad;
// 				// block-size: 40rem;
// 				// inline-size: 40rem;
// 				// outline: 1px solid green;
// 				// outline-offset: -4px;
// 				background-color: #00f6;
// 				display: flex;
// 				flex-direction: column;
				
// 				& > .row {
// 					display: flex;
// 					// background-color: #f0f6;

// 					& > .cube {
// 						// block-size: var(--cube-size);
// 						// inline-size: var(--cube-size);
// 						// box-sizing: border-box;

// 						// background-color: #0f07;
// 						// background-clip: padding-box;
// 						// border: 1rem solid transparent;
// 					}
// 				}
// 			}
// 		}
// 	}
// }


.content {
	position: relative;
	animation: 20s linear infinite rotate;
}

.blocks {
	translate: calc(-.5 * var(--columns) * var(--cube-size)) calc(-.5 * var(--layers) * var(--cube-size)) calc(-.5 * var(--rows) * var(--cube-size));

	// display: flex;
	// flex-direction: column;
	// gap: 1px;
	// padding: 1px;
	// background-color: gray;

	// & .layer {
	// 	display: flex;
	// 	gap: 1px;
	// }

	// & .block {
	// 	inline-size: var(--block-size);
	// 	block-size: var(--block-size);
	// 	position: relative;
	// 	background-color: lightSkyBlue;
	// 	background-size: 100% 100%;
	// 	background-repeat: no-repeat;
	// 	image-rendering: pixelated;

	// 	& > label {
	// 		display: block;
	// 		block-size: 100%;
	// 		inline-size: 100%;
	// 		box-sizing: border-box;

	// 		&:hover {
	// 			border: 3px solid white;
	// 		}
	
	// 		& > input[type=radio] {
	// 			position: absolute;
	// 			opacity: 0;
	// 			pointer-events: none;
	// 		}
	// 	}

	// 	@each $block in $blocks {
	// 		&:has(> label.#{$block} > input[type=radio]:checked) {
	// 			background-image: var(--#{$block}-image);
	// 		}
	// 	}
	// }
}

// div:has(> .cube) {
// 	translate: 0 0 -10rem;
// }

@keyframes rotate {
	from {
		rotate: y 0turn;
	}
	to {
		rotate: y 1turn;
	}
}

.cubes-container {
	translate: calc(var(--column) * var(--cube-size)) calc(var(--layer) * var(--cube-size)) calc(var(--row) * var(--cube-size));

	&:has(> .cube.#{list.nth($blocks, 1)} > input[type=radio]:checked) {
		display: none;
	}

	@each $block in $blocks {
		&:has(> .cube.#{$block} > input[type=radio]:checked) {
			--background-image: var(--#{$block}-image);
		}
	}

	.cube {
		position: absolute;

		// rotate: x 100grad;
		block-size: var(--cube-size);
		inline-size: var(--cube-size);
		// animation: 10s linear infinite rotate;

		& > input[type=radio] {
			position: absolute;
			opacity: 0;
			pointer-events: none;
		}

		& > label {
			position: absolute;
			inset: 0;
			background-image: var(--background-image);
			image-rendering: pixelated;
			background-size: 100% 100%;
			// backface-visibility: hidden;
			transform-origin: center center calc(-1 * var(--cube-size) / 2);
			translate: 0 0 calc(var(--cube-size) / 2);
			box-sizing: border-box;

			&:hover {
				--outline-width: 5px;
				outline: var(--outline-width) solid white;
				outline-offset: calc(-1 * var(--outline-width));
			}

			&.front {
				rotate: y 0grad;
			}
			&.back {
				rotate: y 200grad;
			}
			&.left {
				rotate: y 100grad;
			}
			&.right {
				rotate: y -100grad;
			}
			&.top {
				rotate: x 100grad;
				// background-image: var(--grass-top-image);
			}
			&.bottom {
				rotate: x -100grad;
				// background-image: var(--dirt-image);
			}
		}

		// &.air > label {
		// 	background-image: none;
		// }
	}
	
	&:has(> .cube.grass > input[type=radio]:checked) > .cube > label {
		&.top {
			background-image: var(--grass-top-image);
		}
		&.bottom {
			background-image: var(--dirt-image);
		}
	}
}




// .info {
// 	z-index: 1;
// 	position: absolute;
// 	inset-block-start: 0;
// 	inset-inline: 0;
// 	padding: .75rem;
// 	margin-inline: auto;
// 	inline-size: fit-content;
// 	max-inline-size: min(60rem, 100vw - 10rem);
// 	background-color: #1117;
// 	--backdrop-filter: blur(.4rem);
// 	-webkit-backdrop-filter: var(--backdrop-filter);
// 	backdrop-filter: var(--backdrop-filter);
// 	border-radius: .6rem;
// 	border-start-start-radius: 0;
// 	border-start-end-radius: 0;
// 	text-align: center;
// 	box-shadow: 0 0 1.5rem #0006;
// 	display: flex;
// 	align-items: center;
// 	gap: 1rem;

// 	& strong {
// 		color: gold;
// 	}

// 	& .text {
// 		display: flex;
// 		flex-direction: column;
// 		gap: .3rem;
// 	}

// 	& .close {
// 		padding-inline: .3rem;

// 		&::before {
// 			content: "â¨‰";
// 			font-size: 1.5rem;
// 		}

// 		& > input[type=checkbox] {
// 			position: absolute;
// 			opacity: 0;
// 			pointer-events: none;
// 		}
// 	}

// 	&:has(.close > input[type=checkbox]:checked) {
// 		display: none;
// 	}

// 	& .not-supported {
// 		border: 2px solid red;
// 		background-color: #f004;
// 		border-radius: .7rem;
// 		padding: .6rem .4rem;
// 	}

// 	@supports selector(:has(a)) {
// 		& .not-supported {
// 			display: none;
// 		}
// 	}
// }

.controls {
	z-index: 1;
	position: absolute;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	align-items: center;
	gap: 1.25rem;
	border-radius: 1rem;
	box-shadow: 0 0 1.5rem #0006;
	background-color: #2228;
	--backdrop-filter: blur(.3rem);
	-webkit-backdrop-filter: var(--backdrop-filter);
	backdrop-filter: var(--backdrop-filter);
	padding: .75rem;
	margin-block-end: .75rem;
	inset-block-end: 0;
	inset-inline: 0;
	margin-inline: auto;
	inline-size: fit-content;
	max-inline-size: calc(100vw - 4rem);

	& .block-chooser {
		display: flex;
		align-items: center;
		gap: .5rem;

		& > label {
			display: block;
			inline-size: 3rem;
			block-size: 3rem;
			border-radius: .3rem;
			box-sizing: border-box;
			outline-offset: -1px;
			background-size: 100% 100%;
			background-repeat: no-repeat;
			image-rendering: pixelated;

			&.air {
				background-color: lightSkyBlue;
			}

			@each $block in $blocks {
				&.#{$block} {
					background-image: var(--#{$block}-image);
				}
			}

			&:hover {
				outline: 3px solid silver;
			}

			&:has(> input[type=radio]:checked) {
				outline: 3px solid white;
			}

			& > input[type=radio] {
				position: absolute;
				opacity: 0;
				pointer-events: none;
			}
		}
	}

	@each $block, $_ in $blocks {
		&:has(> .block-chooser > .#{$block} > input[type=radio]:checked) ~ .content .cubes-container > .cube:not(.#{$block}) {
			display: none;
		}
	}

	// & .move-buttons {
	// 	display: flex;
	// 	align-items: center;
	// 	gap: .5rem;

	// 	& > button {
	// 		display: block;
	// 		inline-size: 3rem;
	// 		block-size: 3rem;
	// 		border: none;
	// 		border-radius: .3rem;
	// 		background-color: #0003;
	// 		font-size: 1.2rem;

	// 		&:hover {
	// 			background-color: #0005;
	// 		}

	// 		&:active {
	// 			background-color: #0007;
	// 		}
	// 	}
	// }

	// &:has(> .move-buttons > .up:active) ~ .content .down {
	// 	animation-play-state: running;
	// }
	// &:has(> .move-buttons > .down:active) ~ .content .up {
	// 	animation-play-state: running;
	// }
	// &:has(> .move-buttons > .left:active) ~ .content .right {
	// 	animation-play-state: running;
	// }
	// &:has(> .move-buttons > .right:active) ~ .content .left {
	// 	animation-play-state: running;
	// }
}

// .content {
// 	inline-size: fit-content;

// 	--animation-duration: 10000s;
// 	--max-translation: 300000rem;

// 	& .down {
// 		animation: var(--animation-duration) linear paused move-down;
// 		@keyframes move-down {
// 			from {
// 				translate: 0 0;
// 			}
// 			to {
// 				translate: 0 calc(var(--max-translation));
// 			}
// 		}
// 	}
// 	& .up {
// 		animation: var(--animation-duration) linear paused move-up;
// 		@keyframes move-up {
// 			from {
// 				translate: 0 0;
// 			}
// 			to {
// 				translate: 0 calc(-1 * var(--max-translation));
// 			}
// 		}
// 	}
// 	& .left {
// 		animation: var(--animation-duration) linear paused move-left;
// 		@keyframes move-left {
// 			from {
// 				translate: 0 0;
// 			}
// 			to {
// 				translate: calc(-1 * var(--max-translation)) 0;
// 			}
// 		}
// 	}
// 	& .right {
// 		animation: var(--animation-duration) linear paused move-right;
// 		@keyframes move-right {
// 			from {
// 				translate: 0 0;
// 			}
// 			to {
// 				translate: calc(var(--max-translation)) 0;
// 			}
// 		}
// 	}

// 	& .blocks {
// 		display: flex;
// 		flex-direction: column;
// 		gap: 1px;
// 		padding: 1px;
// 		background-color: gray;

// 		& .layer {
// 			display: flex;
// 			gap: 1px;
// 		}

// 		& .block {
// 			inline-size: var(--block-size);
// 			block-size: var(--block-size);
// 			position: relative;
// 			background-color: lightSkyBlue;
// 			background-size: 100% 100%;
// 			background-repeat: no-repeat;
// 			image-rendering: pixelated;

// 			& > label {
// 				display: block;
// 				block-size: 100%;
// 				inline-size: 100%;
// 				box-sizing: border-box;

// 				&:hover {
// 					border: 3px solid white;
// 				}
		
// 				& > input[type=radio] {
// 					position: absolute;
// 					opacity: 0;
// 					pointer-events: none;
// 				}
// 			}

// 			@each $block in $blocks {
// 				&:has(> label.#{$block} > input[type=radio]:checked) {
// 					background-image: var(--#{$block}-image);
// 				}
// 			}
// 		}
// 	}
// }

